<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList2.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACG
        DQAAAk1TRnQBSQFMAgEBBwEAAWgBAAFoAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAf8B8wG8AQcB7wEc
        BfcC7wEHAfEB9AH2AfQB8gHwCbwB8AHxAfMQ/xAAAf8B8gG8A5MBdAFzAe0BHASTAbwB8wH0AfEBvAEH
        Ae8H9wHvAQcBvAHwAf8B8gG8Ae8CHAb3Ae8BBwHwAfQQAAH0Ab0BtwGTARYCbwJ0AhYBbwKTAbwC8wHw
        AQcC7wf3Ae8BtQEHAbwB9AHwApkBHAF0BxwBmQG8AfMQAAH0ARoClAkWAZMBGgLzAfACBwq2AQcBvAH0
        AfECmQp5AZkBGxAAAfQB8AGTAZQEFgJ1AxYBlAEaARsB8wHwAbwLtgK8AfQBGgKZAX4C5QF6Al4C5QF6
        AXkBmQEaEAAB9AHwAZMBlAMWBHUCFgGUARoBGwH0AfABvAG2CdcBtgK8AfMBGgGZBOUCegPlAXoBeQGZ
        ARoQAAH0AfEBmQGUAxYEdQIWAZQBGgEbAfQB8AG8AbYD1wS2AtcCtgG8AfMBGgGZAX4C5QN6A+UBegGa
        ARoB8hAAAf8B8gEaBZQCdQGUAhYBlAEaARsB9AHwAbwBtgXXAbYC1wHdAbYBvAHwAfQBGgGZA+UBoAGa
        AXoC5QKgAZoBGgHzEAAB/wHyAQcLlAEaAfMB9AHxAbwL3QG8AfAB9AEaAZkD5QGgAZoD5QKgAZoBGgHy
        EAAB/wHxARoKlAGZARoB8wH0AfEBvAvdAbwB8AH0ARoBmQGaA6ABmgGgAeUBmgKgAZoBGgHyEAAB9AEa
        Ab0KlAEHARoC8wHwArwE3QLwBN0BvAHwAfMBvAEaAZoGoAGaAqABmgEaAfEQAAH/Ar0KlAIaAfQB8wHw
        ArwC3QG8A/AD3QK8AfAB9AHwARoLoAEaARsQAAH/ARsCvQiUAbcBvQEaAvQB8gLwAbwC8APxAd0B8AG8
        AvAB8QHzARsBGgugARoBGxAAAf8B8wIaBL0DmgO9ARsB9gH0AfMB8gPwAvEB3gHdAfEB3QLwAfIB8wH0
        ARsBGgHDCaACGgHDEAAB/wL0ARsBGgK9BBoDvQH0AfYB/wH0AfMB8gPxAfIB3gHyA/EB8gHzAfQB9gEb
        B8MCoAHDARoBGwHDAfYQAAX/BvYC9AP2Av8C9ATzAfQF8wH0Av8B9gvDAfYC/xAAAfQB8AEHAe8G9wK1
        AQcBvAHxAfQB/wHzAbwLHAG8AfMB8gG8AQcF7wT3A+8BvAH/AfMBvAHvAhwCkgH3ApICHAEHAfAB9AHz
        AfABuwG1AbQDtQGRA7QBtQHvAbwB8wH/AfIBmQt5AZkB8QHyAbwC7wL3A+8E9wLvAQcB/wHyAQcBHAJ0
        BXMCdAEcAbwB8gHzAgkBugK0AbUCtAG6AdsBtAG1AbsBvAHzAfQB8QGZAXkBWAd5AVgBeQGZAfAB8gG8
        AQcC7wQHBu8BBwH/ARsCmQl5ApkBGwEZAQkB3AnbArsBvAHzAfQB8QGZC3kBmQHwAfIBvA4HAfQBGwGZ
        AXkJegF5AZkBGwHyAQkB3AnbAdwCCQHzAfQB8QGZC3kBmQHwAfEBvA4HAf8BGwGZC3oBmQEbAfIBCQHc
        AdsD3AXbAdwCCQHyAfQB8QGZC3kBmQHwAfEPBwH2ARsBmQt6AZkBGwHyAgkH3ALbAdwCCQHyAfQB8QGZ
        C3kBmQLxAbwOBwH/ARsBmQGaCXoBmgGZARsB8wIJCtwBCQHwAfMB9AHxApkCeQaZAnkBmQHxAfIBvAIH
        BLwIBwH/ARsBGgGaCXoBmgEaARsB8gIJCtwBCQHwAfMB9AHxDZkB8QHyAfACBwa8AQcFvAH/ARsBGgKa
        AnoCmgJ6A5oBGgEbAfICCQXcAgkC3AIJAfAB8wH0AfENmQLxAbwCBwa8AQcFvAH/ARsBGguaARoBGwHz
        AgkJ3AIJAfAB8wH0AfEBCAuZAQgC8QK8AQcGvAIHBLwB/wEbARoHmgF6A5oBGgHyAfMBGQHdCwkB8QHz
        AfQB8gEaAp8HmQGfAZkBGgHxAfIB8Aa8AfAHvAH/ARsBmQeaAXoDmgEaAfIB9AEZAt0ICQHdAhkC9AHz
        ARoLnwEaAfMB8gHxAfAEvALwBrwB8AH2ARsCGgmaAhoBwwH0AfMBGQTdAhkBCQEZAd0DGQP0ARsLnwEb
        AvMB8gLwArwF8AS8AfAB9gEbAhoJmgIaAcMB/wL0ChkD9AH/AfQBGwsaARsB9AHzAfIB8QnwArwB8AHx
        AvYBwwMaBZoDGgEbAvYI/wL0B/8B9AsbAfQB/wH0AfMB8gLxA/AC8QXwAfEB/wL2ARsBwwEaBMMCGgHD
        ARsC9gFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP//wACAAs=
</value>
  </data>
</root>